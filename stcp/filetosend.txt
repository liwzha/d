{
 "metadata": {
  "name": "assn1_prob4"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "a)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import DAL\n",
      "import itertools\n",
      "import time\n",
      "import string\n",
      "import numpy as np\n",
      "from IPython.parallel import Client\n",
      "\n",
      "#assumptions, remove words 50 or less amd top20\n",
      "assump = {\"minfreq\":50, \"top\":20}\n",
      "\n",
      "rc = Client()\n",
      "dview = rc[:]\n",
      "\n",
      "sou = DAL.create('sou')\n",
      "s = sou.subsets()\n",
      "s.remove(u'soumeta.txt') #the metadata file is not a state of the union address\n",
      "dview.scatter('names', s)\n",
      "\n",
      "vs = []\n",
      "print \"Nodes:\", len(rc)\n",
      "for x in xrange(len(rc)):\n",
      "    vs.append(rc[x])\n",
      "\n",
      "#convenience function to accomdate for different # of nodes\n",
      "def nodes_cluster(nodes):\n",
      "    tot = None\n",
      "    for s in range(len(rc)):\n",
      "        if not tot:\n",
      "            tot = nodes[s]\n",
      "        else:\n",
      "            tot += nodes[s]\n",
      "    return tot"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Nodes: 1\n"
       ]
      }
     ],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "@dview.remote(block=True)\n",
      "def freq_word():\n",
      "    import DAL\n",
      "    import string\n",
      "    import collections\n",
      "    sou = DAL.create('sou')\n",
      "    o = []\n",
      "    for n in names:\n",
      "        text = []\n",
      "        for l in sou.iter(n):\n",
      "            text.append(l.strip())\n",
      "        text = \" \".join(text) + \" \"\n",
      "        text = text.lower().translate(string.maketrans(\"\",\"\"), string.punctuation)\n",
      "        o.append((n, dict(collections.Counter(text.split()))))\n",
      "    return o\n",
      "\n",
      "@dview.remote(block=True)\n",
      "def wvector(V, ni, D, sumd):\n",
      "    import DAL\n",
      "    import math\n",
      "    sou = DAL.create('sou')\n",
      "    o = []\n",
      "    for n in names:\n",
      "        data = []\n",
      "        for v in V:\n",
      "            if v not in ni[n]:\n",
      "                data.append(0.0)\n",
      "            else:\n",
      "                data.append(float(ni[n][v])*math.log(D/sumd[v]))\n",
      "        o.append([{n:data}])\n",
      "    return o\n",
      "\n",
      "#=================================================\n",
      "\n",
      "#ni(d) where d is dictionary key\n",
      "ni = freq_word()\n",
      "ni = dict(nodes_cluster(ni))\n",
      "\n",
      "#=================================================\n",
      "\n",
      "#generate a dictionary with all the words\n",
      "V = {}\n",
      "for n in ni:\n",
      "    for k in ni[n]:\n",
      "        if k not in V:\n",
      "            V[k] = 0\n",
      "        V[k] = V[k] + ni[n][k]\n",
      "\n",
      "#remove words based on assumptions. also remove digits\n",
      "V = sorted(V.items(), key=lambda x:x[1], reverse=True)[assump[\"top\"]:]\n",
      "V = [v[0] for v in V if v[1] > assump[\"minfreq\"]]\n",
      "#V = [v for v in V if not v.isdigit()]\n",
      "\n",
      "#**cardinality of D\n",
      "D = len(s)\n",
      "md = sou.metadata()\n",
      "\n",
      "#**denominator Sum(d' in D, blah blah)\n",
      "sumd = {}\n",
      "for w in V:\n",
      "    #we do this because we get an ascii error for one of the words\n",
      "    sumd[w] = sum([1 for n in ni if w in ni[n]])\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#generate wu vectors, using all previous inputs\n",
      "wu = wvector(V, ni, D, sumd)\n",
      "wu = nodes_cluster(wu)\n",
      "\n",
      "#generate dictionary of w vectors\n",
      "wd = {}\n",
      "for w in wu:\n",
      "    wd.update(w[0])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "b)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def similarity(key1, key2):\n",
      "    return np.dot(wd[key1], wd[key2]) / (np.linalg.norm(wd[key1]) * np.linalg.norm(wd[key2]))\n",
      "\n",
      "#determine all the presidents\n",
      "all_pres = {}\n",
      "for pres in wd.keys():\n",
      "    key = \" \".join(pres.split(\"_\")[:-1])\n",
      "    if key not in all_pres:\n",
      "        all_pres[key] = []\n",
      "    all_pres[key].append(pres)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 10
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#find 50 most similar SOTU given by two different presidents\n",
      "dsim_list = []\n",
      "psim_list = []\n",
      "for pres1,pres2 in itertools.permutations(all_pres.keys(), 2):\n",
      "    if pres1 < pres2:\n",
      "        avg = []\n",
      "        for key1 in all_pres[pres1]:\n",
      "            for key2 in all_pres[pres2]:\n",
      "                dsim_list.append([key1, key2, similarity(key1, key2)])\n",
      "                avg.append(similarity(key1, key2))\n",
      "        psim_list.append([pres1, pres2, np.mean(avg)])\n",
      "\n",
      "print \"50 most similar SOTU given by two different presidents\"\n",
      "print \"\"\n",
      "print \"{0:5} | {1:30} | {2:30} | {3}\".format(\"Rank\", \"President 1\", \"President 2\", \"Similarity\") \n",
      "print \"-----------------------------------------------------------------------------------------\"\n",
      "for i,x in enumerate(sorted(dsim_list, key=lambda x:x[2], reverse=True)[:50]):\n",
      "    print \"{0:5} | {1:30} | {2:30} | {3}\".format(i+1, x[0][:-4], x[1][:-4], x[2])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "50 most similar SOTU given by two different presidents\n",
        "\n",
        "Rank  | President 1                    | President 2                    | Similarity\n",
        "-----------------------------------------------------------------------------------------\n",
        "    1 | Barack_Obama_2010              | William_J._Clinton_1995        | 0.682247220711\n",
        "    2 | Barack_Obama_2011              | William_J._Clinton_1995        | 0.644915593298\n",
        "    3 | Barack_Obama_2012              | William_J._Clinton_1995        | 0.641757178235\n",
        "    4 | James_K._Polk_1846             | John_Tyler_1844                | 0.616890270168\n",
        "    5 | Barack_Obama_2010              | William_J._Clinton_1994        | 0.597771259447\n",
        "    6 | George_Bush_1992               | William_J._Clinton_1995        | 0.580034962875\n",
        "    7 | Barack_Obama_2012              | William_J._Clinton_1994        | 0.579977878913\n",
        "    8 | Benjamin_Harrison_1889         | Grover_Cleveland_1885          | 0.572676437998\n",
        "    9 | Barack_Obama_2009              | William_J._Clinton_1993        | 0.572208864024\n",
        "   10 | Barack_Obama_2011              | William_J._Clinton_1993        | 0.569114337783\n",
        "   11 | George_Bush_1989               | Ronald_Reagan_1988             | 0.56885005417\n",
        "   12 | Barack_Obama_2011              | William_J._Clinton_1998        | 0.56115683181\n",
        "   13 | Barack_Obama_2010              | William_J._Clinton_1993        | 0.558280452534\n",
        "   14 | Barack_Obama_2011              | William_J._Clinton_2000        | 0.557364221167\n",
        "   15 | Barack_Obama_2009              | William_J._Clinton_1995        | 0.554593715202\n",
        "   16 | James_K._Polk_1845             | John_Tyler_1844                | 0.553934094905\n",
        "   17 | Grover_Cleveland_1885          | Rutherford_B._Hayes_1877       | 0.553785029634\n",
        "   18 | Barack_Obama_2011              | George_Bush_1990               | 0.55352640571\n",
        "   19 | Barack_Obama_2009              | William_J._Clinton_2000        | 0.550075848228\n",
        "   20 | Barack_Obama_2011              | George_Bush_1989               | 0.54970775253\n",
        "   21 | Barack_Obama_2010              | George_Bush_1992               | 0.547473643683\n",
        "   22 | Grover_Cleveland_1885          | Rutherford_B._Hayes_1880       | 0.547391739886\n",
        "   23 | Barack_Obama_2011              | William_J._Clinton_1994        | 0.547190042291\n",
        "   24 | George_Bush_1992               | William_J._Clinton_1994        | 0.54271683707\n",
        "   25 | Barack_Obama_2011              | George_Bush_1992               | 0.542618304113\n",
        "   26 | George_Bush_1989               | Ronald_Reagan_1986             | 0.54023994024\n",
        "   27 | Barack_Obama_2011              | Ronald_Reagan_1984             | 0.540183050587\n",
        "   28 | Barack_Obama_2012              | William_J._Clinton_1993        | 0.538137047197\n",
        "   29 | George_W._Bush_2001            | William_J._Clinton_2000        | 0.538056722975\n",
        "   30 | Andrew_Jackson_1836            | Martin_Van_Buren_1839          | 0.53712549181\n",
        "   31 | Barack_Obama_2009              | William_J._Clinton_1994        | 0.536366648845\n",
        "   32 | George_Bush_1989               | William_J._Clinton_2000        | 0.534345707373\n",
        "   33 | Barack_Obama_2010              | William_J._Clinton_1998        | 0.534302066429\n",
        "   34 | Barack_Obama_2009              | William_J._Clinton_1998        | 0.531863975005\n",
        "   35 | George_Bush_1989               | William_J._Clinton_1998        | 0.530794043018\n",
        "   36 | Theodore_Roosevelt_1907        | William_Howard_Taft_1910       | 0.52910074317\n",
        "   37 | Barack_Obama_2010              | William_J._Clinton_2000        | 0.52721089539\n",
        "   38 | Barack_Obama_2010              | George_Bush_1989               | 0.525004123445\n",
        "   39 | Barack_Obama_2012              | William_J._Clinton_2000        | 0.520615949368\n",
        "   40 | Jimmy_Carter_1978              | Ronald_Reagan_1982             | 0.51844468838\n",
        "   41 | George_Bush_1989               | Ronald_Reagan_1984             | 0.51746290193\n",
        "   42 | Barack_Obama_2012              | William_J._Clinton_1998        | 0.515349074491\n",
        "   43 | Barack_Obama_2013              | William_J._Clinton_1993        | 0.515348792473\n",
        "   44 | Benjamin_Harrison_1889         | Rutherford_B._Hayes_1880       | 0.515306336191\n",
        "   45 | George_Bush_1992               | William_J._Clinton_2000        | 0.514474177763\n",
        "   46 | Ronald_Reagan_1987             | William_J._Clinton_1995        | 0.511222907312\n",
        "   47 | George_W._Bush_2001            | William_J._Clinton_1997        | 0.510472396254\n",
        "   48 | George_W._Bush_2001            | William_J._Clinton_1999        | 0.510130335817\n",
        "   49 | George_Bush_1989               | William_J._Clinton_1997        | 0.509011986145\n",
        "   50 | Ronald_Reagan_1985             | William_J._Clinton_2000        | 0.507834950507\n"
       ]
      }
     ],
     "prompt_number": 22
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#find 50 most similar SOTU given by same president\n",
      "ssim_list = []\n",
      "for pres in all_pres.keys():\n",
      "    for key1 in all_pres[pres]:\n",
      "        for key2 in all_pres[pres]:\n",
      "            if key1 < key2:\n",
      "                ssim_list.append([key1, key2, similarity(key1, key2)])\n",
      "\n",
      "print \"50 most similar SOTU given by same president\"\n",
      "print \"\"\n",
      "print \"{0:5} | {1:30} | {2:30} | {3}\".format(\"Rank\", \"President 1\", \"President 2\", \"Similarity\") \n",
      "print \"-----------------------------------------------------------------------------------------\"\n",
      "for i,x in enumerate(sorted(ssim_list, key=lambda x:x[2], reverse=True)[:50]):\n",
      "    print \"{0:5} | {1:30} | {2:30} | {3}\".format(i+1, x[0][:-4], x[1][:-4], x[2])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "50 most similar SOTU given by same president\n",
        "\n",
        "Rank  | President 1                    | President 2                    | Similarity\n",
        "-----------------------------------------------------------------------------------------\n",
        "    1 | George_W._Bush_2007            | George_W._Bush_2008            | 0.818606255778\n",
        "    2 | Barack_Obama_2010              | Barack_Obama_2012              | 0.787283519597\n",
        "    3 | Barack_Obama_2010              | Barack_Obama_2011              | 0.781170679184\n",
        "    4 | Barack_Obama_2011              | Barack_Obama_2012              | 0.758232036105\n",
        "    5 | Barack_Obama_2012              | Barack_Obama_2013              | 0.747355316995\n",
        "    6 | William_J._Clinton_1997        | William_J._Clinton_1998        | 0.743685388171\n",
        "    7 | George_W._Bush_2005            | George_W._Bush_2008            | 0.732261443883\n",
        "    8 | William_J._Clinton_1998        | William_J._Clinton_1999        | 0.728326666092\n",
        "    9 | George_W._Bush_2005            | George_W._Bush_2007            | 0.718207370788\n",
        "   10 | Lyndon_B._Johnson_1966         | Lyndon_B._Johnson_1967         | 0.715993115592\n",
        "   11 | William_J._Clinton_1997        | William_J._Clinton_1999        | 0.715308185074\n",
        "   12 | George_W._Bush_2004            | George_W._Bush_2007            | 0.714361940125\n",
        "   13 | Barack_Obama_2009              | Barack_Obama_2010              | 0.704987615787\n",
        "   14 | William_J._Clinton_1998        | William_J._Clinton_2000        | 0.698468956448\n",
        "   15 | George_W._Bush_2004            | George_W._Bush_2008            | 0.688160048798\n",
        "   16 | William_McKinley_1899          | William_McKinley_1900          | 0.685217290299\n",
        "   17 | George_W._Bush_2006            | George_W._Bush_2007            | 0.683664767763\n",
        "   18 | William_J._Clinton_1999        | William_J._Clinton_2000        | 0.676084591258\n",
        "   19 | George_W._Bush_2004            | George_W._Bush_2005            | 0.674063682681\n",
        "   20 | William_J._Clinton_1994        | William_J._Clinton_1995        | 0.669331102957\n",
        "   21 | Barack_Obama_2009              | Barack_Obama_2012              | 0.667846168285\n",
        "   22 | George_W._Bush_2003            | George_W._Bush_2004            | 0.667640067187\n",
        "   23 | Andrew_Jackson_1834            | Andrew_Jackson_1835            | 0.666914784834\n",
        "   24 | George_W._Bush_2006            | George_W._Bush_2008            | 0.663278471875\n",
        "   25 | Barack_Obama_2009              | Barack_Obama_2011              | 0.660977629705\n",
        "   26 | Grover_Cleveland_1893          | Grover_Cleveland_1894          | 0.659342296042\n",
        "   27 | George_W._Bush_2005            | George_W._Bush_2006            | 0.653777857319\n",
        "   28 | Dwight_D._Eisenhower_1955      | Dwight_D._Eisenhower_1956      | 0.651852080582\n",
        "   29 | William_J._Clinton_1996        | William_J._Clinton_1997        | 0.643268848709\n",
        "   30 | William_J._Clinton_1997        | William_J._Clinton_2000        | 0.641375176442\n",
        "   31 | William_Howard_Taft_1910       | William_Howard_Taft_1912       | 0.64025927791\n",
        "   32 | George_W._Bush_2004            | George_W._Bush_2006            | 0.634138562139\n",
        "   33 | George_W._Bush_2003            | George_W._Bush_2007            | 0.63399687238\n",
        "   34 | James_K._Polk_1845             | James_K._Polk_1846             | 0.632174603294\n",
        "   35 | Theodore_Roosevelt_1907        | Theodore_Roosevelt_1908        | 0.622665332212\n",
        "   36 | William_J._Clinton_1995        | William_J._Clinton_1998        | 0.622084659661\n",
        "   37 | Lyndon_B._Johnson_1966         | Lyndon_B._Johnson_1969         | 0.6212037055\n",
        "   38 | Andrew_Johnson_1867            | Andrew_Johnson_1868            | 0.618122554039\n",
        "   39 | Jimmy_Carter_1978              | Jimmy_Carter_1979              | 0.617664489502\n",
        "   40 | William_J._Clinton_1993        | William_J._Clinton_1995        | 0.610426553654\n",
        "   41 | Dwight_D._Eisenhower_1954      | Dwight_D._Eisenhower_1956      | 0.609935506208\n",
        "   42 | Dwight_D._Eisenhower_1954      | Dwight_D._Eisenhower_1955      | 0.606435393352\n",
        "   43 | Theodore_Roosevelt_1905        | Theodore_Roosevelt_1907        | 0.605564892744\n",
        "   44 | William_McKinley_1898          | William_McKinley_1899          | 0.603828443102\n",
        "   45 | William_J._Clinton_1993        | William_J._Clinton_1994        | 0.602900109758\n",
        "   46 | William_J._Clinton_1995        | William_J._Clinton_2000        | 0.59997371132\n",
        "   47 | Lyndon_B._Johnson_1967         | Lyndon_B._Johnson_1969         | 0.596734826104\n",
        "   48 | Franklin_D._Roosevelt_1943     | Franklin_D._Roosevelt_1945     | 0.595447729276\n",
        "   49 | Franklin_D._Roosevelt_1942     | Franklin_D._Roosevelt_1943     | 0.593960605514\n",
        "   50 | George_W._Bush_2003            | George_W._Bush_2008            | 0.59375901802\n"
       ]
      }
     ],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "print \"25 most similar pairs of presidents\"\n",
      "print \"\"\n",
      "print \"{0:5} | {1:30} | {2:30} | {3}\".format(\"Rank\", \"President 1\", \"President 2\", \"Similarity\") \n",
      "print \"-----------------------------------------------------------------------------------------\"\n",
      "for i,x in enumerate(sorted(psim_list, key=lambda x:x[2], reverse=True)[:25]):\n",
      "    print \"{0:5} | {1:30} | {2:30} | {3}\".format(i+1, x[0], x[1], x[2])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "25 most similar pairs of presidents\n",
        "\n",
        "Rank  | President 1                    | President 2                    | Similarity\n",
        "-----------------------------------------------------------------------------------------\n",
        "    1 | Barack Obama                   | William J. Clinton             | 0.506298625554\n",
        "    2 | Barack Obama                   | George Bush                    | 0.468403281785\n",
        "    3 | George Bush                    | William J. Clinton             | 0.46223839911\n",
        "    4 | George Bush                    | Ronald Reagan                  | 0.450168746109\n",
        "    5 | Millard Fillmore               | Zachary Taylor                 | 0.445918681162\n",
        "    6 | Ronald Reagan                  | William J. Clinton             | 0.41870554636\n",
        "    7 | Barack Obama                   | Ronald Reagan                  | 0.412400815032\n",
        "    8 | Chester A. Arthur              | Rutherford B. Hayes            | 0.397112226385\n",
        "    9 | Theodore Roosevelt             | William Howard Taft            | 0.382906913582\n",
        "   10 | James K. Polk                  | Millard Fillmore               | 0.382350630144\n",
        "   11 | Chester A. Arthur              | Grover Cleveland               | 0.371547188985\n",
        "   12 | Benjamin Harrison              | Chester A. Arthur              | 0.370787351923\n",
        "   13 | Grover Cleveland               | Rutherford B. Hayes            | 0.36674128252\n",
        "   14 | George W. Bush                 | William J. Clinton             | 0.36647600703\n",
        "   15 | Andrew Jackson                 | Martin Van Buren               | 0.36432179479\n",
        "   16 | Chester A. Arthur              | William Howard Taft            | 0.361422211388\n",
        "   17 | Barack Obama                   | George W. Bush                 | 0.358821098319\n",
        "   18 | Benjamin Harrison              | Grover Cleveland               | 0.358728821308\n",
        "   19 | Dwight D. Eisenhower           | John F. Kennedy                | 0.354658527512\n",
        "   20 | John Tyler                     | Martin Van Buren               | 0.353779162917\n",
        "   21 | James K. Polk                  | Zachary Taylor                 | 0.353353505746\n",
        "   22 | Benjamin Harrison              | Rutherford B. Hayes            | 0.3452388142\n",
        "   23 | Calvin Coolidge                | William Howard Taft            | 0.344689627844\n",
        "   24 | Gerald R. Ford                 | John F. Kennedy                | 0.342980621649\n",
        "   25 | Franklin Pierce                | Millard Fillmore               | 0.342860213541\n"
       ]
      }
     ],
     "prompt_number": 23
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "I manually inspected a few speeches and noticed certain trends:\n",
      "    \n",
      " * for top50 by different presidents, there are some interesting observations that coincide with the relationships of the presidents. This may be explained by the recent history. Barack Obama elected Hilary Clinton as his Secretary of State and therefore it is possible that he has been influenced by her husband, Bill Clinton -- and that has been influenced in his speeches. Furthermore, Bill Clinton was an instrumental piece to the re-election of Barack Obama and therefore, the more recent SOTU have some of his elements. James Polk and John Taylor's SOTU appear to be similar, mostly likely due to the time in which they spoke. 1844 and 1846 are very early in the SOTU cycle and it is likely they had similar SOTU writers. \n",
      " * for top50 by same president, there are some observations that coincide with topics that have occured. Looking at the top similarity scores, we see that the dates are all hovering around 2008+. This is timed with the recent economic crisis, so I would imagine that the themes mentioned are quite related. It is also worth noting that the high similarity score for same presidents in comparison to that of different presidents is likely evident because the SOTU speech writers are likely the same individuals.\n",
      " * lastly, it appears that presidents have high similarity scores when they appear in similar timelines. For exmample, Theodore Roosevelt and William Taft are president #26 and #27, respectively. While they are two indepedent thinking souls --- its very likely that they retain similar resources (such as SOTU writers) while dealing with similar issues. The list of 25 most similar Presidents shows this time based theme over and over again.\n",
      " \n",
      "\n",
      "According to Wikipedia, there are some downsides\n",
      " \n",
      "  * Documents could have similar themes, but different vocalubary. This is not accounted for. A synonym dictionary could help improve this.\n",
      "  * There is an assumption with independence of how terms are sequenced. n-grams could improve this.\n",
      "  * The text in the documents are indepedent of their location. again, n-grams can improve this. \n",
      "\n",
      "Note: Using a more sophisticated stopwords list may also be helpful to the results. This is because we somewhat arbitrary removed words (such as less than 50) and top 20 frequency words.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}